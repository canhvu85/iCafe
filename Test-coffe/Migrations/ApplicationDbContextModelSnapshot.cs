// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_coffe.Models;

namespace Test_coffe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Test_coffe.Models.Accounts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(8,0)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("info_card")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("type_card")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("UsersId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Test_coffe.Models.BillDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillsId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(8,0)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(8,0)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("BillsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Test_coffe.Models.Bills", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TablesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("fee_service")
                        .HasColumnType("decimal(8,0)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(8,0)");

                    b.Property<DateTime>("time_enter")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("time_out")
                        .HasColumnType("datetime");

                    b.Property<decimal>("total_money")
                        .HasColumnType("decimal(8,0)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("TablesId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Test_coffe.Models.Cataloges", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ShopsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("ShopsId");

                    b.ToTable("Cataloges");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ShopsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(4368),
                            isDeleted = false,
                            name = "Coffee",
                            permalink = "Coffee"
                        },
                        new
                        {
                            id = 2,
                            ShopsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(7573),
                            isDeleted = false,
                            name = "MilkTea",
                            permalink = "MilkTea"
                        },
                        new
                        {
                            id = 3,
                            ShopsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(7643),
                            isDeleted = false,
                            name = "Food",
                            permalink = "Food"
                        },
                        new
                        {
                            id = 4,
                            ShopsId = 2,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(7647),
                            isDeleted = false,
                            name = "MilkTea",
                            permalink = "MilkTea"
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.Cities", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 946, DateTimeKind.Local).AddTicks(4642),
                            isDeleted = false,
                            name = "Huế",
                            permalink = "Hue"
                        },
                        new
                        {
                            id = 2,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 948, DateTimeKind.Local).AddTicks(2930),
                            isDeleted = false,
                            name = "Sài Gòn",
                            permalink = "Sai_Gon"
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.Floors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ShopsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("ShopsId");

                    b.ToTable("Floors");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ShopsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 954, DateTimeKind.Local).AddTicks(4105),
                            isDeleted = false,
                            name = "Tầng 1",
                            permalink = "Tang_1"
                        },
                        new
                        {
                            id = 2,
                            ShopsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 954, DateTimeKind.Local).AddTicks(7434),
                            isDeleted = false,
                            name = "Tầng 2",
                            permalink = "Tang_2"
                        },
                        new
                        {
                            id = 3,
                            ShopsId = 2,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 954, DateTimeKind.Local).AddTicks(7497),
                            isDeleted = false,
                            name = "Tầng 1",
                            permalink = "Tang_1"
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.Groups", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Test_coffe.Models.PermissionDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PermissionsId")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("action")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("permalink_permissions")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("PermissionsId");

                    b.HasIndex("UsersId");

                    b.ToTable("PermissionDetails");
                });

            modelBuilder.Entity("Test_coffe.Models.Permissions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("GroupsId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Test_coffe.Models.Positions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 950, DateTimeKind.Local).AddTicks(5909),
                            isDeleted = false,
                            name = "Nhân Viên"
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("images")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(8,0)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("CatalogesId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CatalogesId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(9470),
                            isDeleted = false,
                            name = "Cà phê đen",
                            price = 10000m
                        },
                        new
                        {
                            id = 2,
                            CatalogesId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 956, DateTimeKind.Local).AddTicks(2736),
                            isDeleted = false,
                            name = "Cà phê sữa",
                            price = 12000m
                        },
                        new
                        {
                            id = 3,
                            CatalogesId = 2,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 956, DateTimeKind.Local).AddTicks(2788),
                            isDeleted = false,
                            name = "Trà sữa socola",
                            price = 18000m
                        },
                        new
                        {
                            id = 4,
                            CatalogesId = 2,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 956, DateTimeKind.Local).AddTicks(2792),
                            isDeleted = false,
                            name = "Trà sữa matcha",
                            price = 20000m
                        },
                        new
                        {
                            id = 5,
                            CatalogesId = 3,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 956, DateTimeKind.Local).AddTicks(2795),
                            isDeleted = false,
                            name = "Khoai tây chiên",
                            price = 15000m
                        },
                        new
                        {
                            id = 6,
                            CatalogesId = 4,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 956, DateTimeKind.Local).AddTicks(2799),
                            isDeleted = false,
                            name = "Cà phê đen",
                            price = 10000m
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.Shops", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("images")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("info")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("time_close")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("time_open")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("CitiesId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CitiesId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 950, DateTimeKind.Local).AddTicks(9552),
                            isDeleted = false,
                            name = "The One",
                            status = 0,
                            time_close = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            time_open = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 2,
                            CitiesId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 954, DateTimeKind.Local).AddTicks(2068),
                            isDeleted = false,
                            name = "HighLand",
                            status = 0,
                            time_close = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            time_open = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.Tables", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FloorsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("FloorsId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            id = 1,
                            FloorsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 954, DateTimeKind.Local).AddTicks(9574),
                            isDeleted = false,
                            name = "Bàn 1",
                            permalink = "Ban_1",
                            status = 0
                        },
                        new
                        {
                            id = 2,
                            FloorsId = 1,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(2755),
                            isDeleted = false,
                            name = "Bàn 2",
                            permalink = "Ban_2",
                            status = 0
                        },
                        new
                        {
                            id = 3,
                            FloorsId = 2,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(2807),
                            isDeleted = false,
                            name = "Bàn 3",
                            permalink = "Ban_3",
                            status = 0
                        },
                        new
                        {
                            id = 4,
                            FloorsId = 3,
                            created_at = new DateTime(2020, 5, 6, 20, 27, 1, 955, DateTimeKind.Local).AddTicks(2811),
                            isDeleted = false,
                            name = "Bàn 1",
                            permalink = "Ban_1",
                            status = 0
                        });
                });

            modelBuilder.Entity("Test_coffe.Models.TypeMoneys", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("TypeMoneys");
                });

            modelBuilder.Entity("Test_coffe.Models.Units", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Test_coffe.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PositionsId")
                        .HasColumnType("int");

                    b.Property<int?>("ShopsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("images")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("permalink")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("remember_token")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("PositionsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Test_coffe.Models.Accounts", b =>
                {
                    b.HasOne("Test_coffe.Models.Users", "Users")
                        .WithMany("Accounts")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Test_coffe.Models.BillDetails", b =>
                {
                    b.HasOne("Test_coffe.Models.Bills", "Bills")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillsId");

                    b.HasOne("Test_coffe.Models.Products", "Products")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("Test_coffe.Models.Bills", b =>
                {
                    b.HasOne("Test_coffe.Models.Tables", "Tables")
                        .WithMany("Bills")
                        .HasForeignKey("TablesId");
                });

            modelBuilder.Entity("Test_coffe.Models.Cataloges", b =>
                {
                    b.HasOne("Test_coffe.Models.Shops", "Shops")
                        .WithMany("Cataloges")
                        .HasForeignKey("ShopsId");
                });

            modelBuilder.Entity("Test_coffe.Models.Floors", b =>
                {
                    b.HasOne("Test_coffe.Models.Shops", "Shops")
                        .WithMany("Floors")
                        .HasForeignKey("ShopsId");
                });

            modelBuilder.Entity("Test_coffe.Models.PermissionDetails", b =>
                {
                    b.HasOne("Test_coffe.Models.Permissions", "Permissions")
                        .WithMany("PermissionDetails")
                        .HasForeignKey("PermissionsId");

                    b.HasOne("Test_coffe.Models.Users", "Users")
                        .WithMany("PermissionDetails")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("Test_coffe.Models.Permissions", b =>
                {
                    b.HasOne("Test_coffe.Models.Groups", "Groups")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupsId");
                });

            modelBuilder.Entity("Test_coffe.Models.Products", b =>
                {
                    b.HasOne("Test_coffe.Models.Cataloges", "Cataloges")
                        .WithMany("Products")
                        .HasForeignKey("CatalogesId");
                });

            modelBuilder.Entity("Test_coffe.Models.Shops", b =>
                {
                    b.HasOne("Test_coffe.Models.Cities", "Cities")
                        .WithMany("Shops")
                        .HasForeignKey("CitiesId");
                });

            modelBuilder.Entity("Test_coffe.Models.Tables", b =>
                {
                    b.HasOne("Test_coffe.Models.Floors", "Floors")
                        .WithMany("Tables")
                        .HasForeignKey("FloorsId");
                });

            modelBuilder.Entity("Test_coffe.Models.Users", b =>
                {
                    b.HasOne("Test_coffe.Models.Positions", "Positions")
                        .WithMany("Users")
                        .HasForeignKey("PositionsId");

                    b.HasOne("Test_coffe.Models.Shops", "Shops")
                        .WithMany("Users")
                        .HasForeignKey("ShopsId");
                });
#pragma warning restore 612, 618
        }
    }
}
